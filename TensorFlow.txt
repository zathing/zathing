TF的四大核心概念：计算图，操作，变量，会话。

一、计算图（又被称为有向图和数据流图）
用节点和线的有向图来描述数学计算。描述了张量数据的计算流程，负责维护和更新状态，对分支进行条件控制和循环操作。
1、节点用来表示施加的数学操作，数据输入的起点/输出的终点，读取/写入持久变量的终点。
2、线表示节点之间的输入/输出关系。
3、张量就是大小可以动态调整的多维数据数组。

二、运算操作
一个运算操作代表了一种类型的抽象运算，比如矩阵乘法或者向量加法。
一个运算符可以有自己的属性，但是所有的属性都必须被提前设置。
通过设置运算操作的属性可以用来支持不同的tensor元素类型。
运算核是一个运算操作在某个具体的硬件的实现。
可以通过注册机制加入新的运算操作符或者为已有的运算操作添加新的计算核。

三、变量
1、创建：当训练模型时，用变量来存储和更新参数。建模时他们需要被明确的初始化，模型训练之后必须被存储到磁盘。并且可以在之后模型训练和分析师被加载。
2、初始化：最简单的方式就是一次性全部初始化，并在使用模型之前首先运行初始化操作。另一个方式是自定义初始化。还有一个是由另一个变量初始化，使用其他变量的initialized_valued属性。
3、保存和恢复：最简单的保存和恢复模型的方法是使用tf.train.Saver对象，构造器给计算图中所有的变量，或是定义在列表里的变量，添加了save和restore操作。Saver对象提供了方法来运行这些操作，定义了检查点文件的读写路径。
4、会话：完成全部的构建准备，生成全部所需的操作之后，就可以创建一个sess = tf.Session()。也可以利用with代码块生成Session，限制作用域：with tf.Session() as sess；
    生成会话之后，所有tf.Variable实例会立即通过调用各自初始化操作中的sess.run() 函数进行初始化。完成会话变量中的初始化之后就可以开始进行训练了。
